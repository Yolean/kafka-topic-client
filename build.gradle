
repositories {
  mavenCentral()
  jcenter()
  maven {
    url "http://packages.confluent.io/maven/"
  }
}

apply plugin: 'java'
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "maven"
apply plugin: "jacoco"

group 'se.yolean'

sourceCompatibility = 1.8

apply plugin: 'application'
mainClassName = 'se.yolean.kafka.topic.client.cli.Client'

configurations {
  compile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
  compile.exclude group: 'log4j', module: 'log4j'
}

dependencies {
  compile group: 'javax.inject', name: 'javax.inject', version: '1'
  compile group: 'com.google.inject', name: 'guice', version: '4.1.0'

  compile group: 'org.apache.kafka', name: 'kafka-clients', version: '1.0.0'

  compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '1.0.0'
  compile group: 'com.101tec', name: 'zkclient', version: '0.10'

  compile group: 'io.confluent', name: 'kafka-schema-registry-client', version: '4.0.0'

  compile group: 'com.nurkiewicz.asyncretry', name: 'asyncretry', version: '0.0.7'
  
  runtime group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
  runtime group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'
  compile group: 'structlog4j', name: 'structlog4j-api', version: '1.0.0'
  compile group: 'structlog4j', name: 'structlog4j-json', version: '1.0.0'

  compile group: 'io.prometheus', name: 'simpleclient', version: '0.1.0'
  compile group: 'io.prometheus', name: 'simpleclient_httpserver', version: '0.1.0'

  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'org.mockito', name: 'mockito-core', version: '2.12.0'
}

task copyToLib(type: Copy) {
	into "$buildDir/libs"
	from configurations.runtime
}

build.dependsOn(copyToLib)

// for .editorconfig support in Eclipse
buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.standardout:gradle-eclipseconfig:1.1.0'
    classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.2'
    classpath 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.12.0'
  }
}
apply plugin: 'org.standardout.eclipseconfig'

apply plugin: 'org.unbroken-dome.test-sets'
testSets {
  itest
}

apply plugin: 'com.commercehub.gradle.plugin.avro'
avro {
}
